// <auto-generated />
using System;
using HRM.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HRM.Domain.Migrations
{
    [DbContext(typeof(HrmContext))]
    [Migration("20240518150246_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HRM.Domain.Entities.BenefitPlan", b =>
                {
                    b.Property<decimal>("BenefitPlansId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("BENEFIT_PLANS_ID");

                    b.Property<decimal?>("Deductable")
                        .HasColumnType("money")
                        .HasColumnName("DEDUCTABLE");

                    b.Property<decimal?>("PercentageCopay")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("PERCENTAGE_COPAY");

                    b.Property<string>("PlanName")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("PLAN_NAME")
                        .IsFixedLength();

                    b.HasKey("BenefitPlansId");

                    b.ToTable("BENEFIT_PLANS", (string)null);
                });

            modelBuilder.Entity("HRM.Domain.Entities.Employment", b =>
                {
                    b.Property<decimal>("EmploymentId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("EMPLOYMENT_ID");

                    b.Property<string>("EmploymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMPLOYMENT_CODE");

                    b.Property<string>("EmploymentStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("EMPLOYMENT_STATUS")
                        .IsFixedLength();

                    b.Property<DateOnly?>("HireDateForWorking")
                        .HasColumnType("date")
                        .HasColumnName("HIRE_DATE_FOR_WORKING");

                    b.Property<DateOnly?>("LastReviewDate")
                        .HasColumnType("date")
                        .HasColumnName("LAST_REVIEW_DATE");

                    b.Property<decimal?>("NumberDaysRequirementOfWorkingPerMonth")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("NUMBER_DAYS_REQUIREMENT_OF_WORKING_PER_MONTH");

                    b.Property<decimal?>("PersonalId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("PERSONAL_ID");

                    b.Property<DateOnly?>("RehireDateForWorking")
                        .HasColumnType("date")
                        .HasColumnName("REHIRE_DATE_FOR_WORKING");

                    b.Property<DateOnly?>("TerminationDate")
                        .HasColumnType("date")
                        .HasColumnName("TERMINATION_DATE");

                    b.Property<string>("WorkersCompCode")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("WORKERS_COMP_CODE")
                        .IsFixedLength()
                        .HasComment("MÃ CÔNG VIỆC");

                    b.HasKey("EmploymentId");

                    b.HasIndex("PersonalId")
                        .IsUnique()
                        .HasFilter("[PERSONAL_ID] IS NOT NULL");

                    b.ToTable("EMPLOYMENT", (string)null);
                });

            modelBuilder.Entity("HRM.Domain.Entities.EmploymentWorkingTime", b =>
                {
                    b.Property<decimal>("EmploymentWorkingTimeId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("EMPLOYMENT_WORKING_TIME_ID");

                    b.Property<decimal?>("EmploymentId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("EMPLOYMENT_ID");

                    b.Property<decimal?>("MonthWorking")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("MONTH_WORKING");

                    b.Property<decimal?>("NumberDaysActualOfWorkingPerMonth")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("NUMBER_DAYS_ACTUAL_OF_WORKING_PER_MONTH");

                    b.Property<decimal?>("TotalNumberVacationWorkingDaysPerMonth")
                        .HasColumnType("numeric(2, 0)")
                        .HasColumnName("TOTAL_NUMBER_VACATION_WORKING_DAYS_PER_MONTH");

                    b.Property<DateOnly?>("YearWorking")
                        .HasColumnType("date")
                        .HasColumnName("YEAR_WORKING");

                    b.HasKey("EmploymentWorkingTimeId");

                    b.HasIndex("EmploymentId");

                    b.ToTable("EMPLOYMENT_WORKING_TIME", (string)null);
                });

            modelBuilder.Entity("HRM.Domain.Entities.JobHistory", b =>
                {
                    b.Property<decimal>("JobHistoryId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("JOB_HISTORY_ID");

                    b.Property<string>("Department")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DEPARTMENT");

                    b.Property<string>("Division")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("DIVISION");

                    b.Property<decimal?>("EmploymentId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("EMPLOYMENT_ID");

                    b.Property<DateOnly?>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("FROM_DATE");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("JOB_TITLE");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("SUPERVISOR");

                    b.Property<DateOnly?>("ThruDate")
                        .HasColumnType("date")
                        .HasColumnName("THRU_DATE");

                    b.Property<short?>("TypeOfWork")
                        .HasColumnType("smallint")
                        .HasColumnName("TYPE_OF_WORK");

                    b.HasKey("JobHistoryId");

                    b.HasIndex("EmploymentId");

                    b.ToTable("JOB_HISTORY", (string)null);
                });

            modelBuilder.Entity("HRM.Domain.Entities.Personal", b =>
                {
                    b.Property<decimal>("PersonalId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("PERSONAL_ID");

                    b.Property<decimal?>("BenefitPlanId")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("BENEFIT_PLAN_ID");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("BIRTH_DATE");

                    b.Property<string>("CurrentAddress1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CURRENT_ADDRESS_1");

                    b.Property<string>("CurrentAddress2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CURRENT_ADDRESS_2");

                    b.Property<string>("CurrentCity")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CURRENT_CITY");

                    b.Property<string>("CurrentCountry")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CURRENT_COUNTRY");

                    b.Property<string>("CurrentFirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURRENT_FIRST_NAME");

                    b.Property<string>("CurrentGender")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CURRENT_GENDER");

                    b.Property<string>("CurrentLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CURRENT_LAST_NAME");

                    b.Property<string>("CurrentMaritalStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURRENT_MARITAL_STATUS");

                    b.Property<string>("CurrentMiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURRENT_MIDDLE_NAME");

                    b.Property<string>("CurrentPersonalEmail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CURRENT_PERSONAL_EMAIL");

                    b.Property<string>("CurrentPhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CURRENT_PHONE_NUMBER");

                    b.Property<decimal?>("CurrentZip")
                        .HasColumnType("numeric(18, 0)")
                        .HasColumnName("CURRENT_ZIP");

                    b.Property<string>("DriversLicense")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DRIVERS_LICENSE");

                    b.Property<string>("Ethnicity")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("ETHNICITY")
                        .IsFixedLength();

                    b.Property<short?>("ShareholderStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("SHAREHOLDER_STATUS");

                    b.Property<decimal?>("SocialSecurityNumber")
                        .HasMaxLength(20)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SOCIAL_SECURITY_NUMBER");

                    b.HasKey("PersonalId");

                    b.HasIndex("BenefitPlanId");

                    b.ToTable("PERSONAL", (string)null);
                });

            modelBuilder.Entity("HRM.Domain.Entities.Employment", b =>
                {
                    b.HasOne("HRM.Domain.Entities.Personal", "Personal")
                        .WithOne("Employment")
                        .HasForeignKey("HRM.Domain.Entities.Employment", "PersonalId")
                        .HasConstraintName("FK_EMPLOYMENT_PERSONAL");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("HRM.Domain.Entities.EmploymentWorkingTime", b =>
                {
                    b.HasOne("HRM.Domain.Entities.Employment", "Employment")
                        .WithMany("EmploymentWorkingTimes")
                        .HasForeignKey("EmploymentId")
                        .HasConstraintName("FK_EMPLOYMENT_WORKING_TIME_EMPLOYMENT");

                    b.Navigation("Employment");
                });

            modelBuilder.Entity("HRM.Domain.Entities.JobHistory", b =>
                {
                    b.HasOne("HRM.Domain.Entities.Employment", "Employment")
                        .WithMany("JobHistories")
                        .HasForeignKey("EmploymentId")
                        .HasConstraintName("FK_JOB_HISTORY_EMPLOYMENT");

                    b.Navigation("Employment");
                });

            modelBuilder.Entity("HRM.Domain.Entities.Personal", b =>
                {
                    b.HasOne("HRM.Domain.Entities.BenefitPlan", "BenefitPlan")
                        .WithMany("Personals")
                        .HasForeignKey("BenefitPlanId")
                        .HasConstraintName("FK_PERSONAL_BENEFIT_PLANS");

                    b.Navigation("BenefitPlan");
                });

            modelBuilder.Entity("HRM.Domain.Entities.BenefitPlan", b =>
                {
                    b.Navigation("Personals");
                });

            modelBuilder.Entity("HRM.Domain.Entities.Employment", b =>
                {
                    b.Navigation("EmploymentWorkingTimes");

                    b.Navigation("JobHistories");
                });

            modelBuilder.Entity("HRM.Domain.Entities.Personal", b =>
                {
                    b.Navigation("Employment");
                });
#pragma warning restore 612, 618
        }
    }
}
